@startuml breakout

class Ball {
    -int x
    -int y
    -int dirX
    -int dirY
    +Ball(int x, int y, int dirX, int dirY)
    +void move()
    +void draw()
    +int getX() const
    +int getY() const
    +void changeDirectionY()
    +void changeDirectionX()
}

class Paddle {
    -int x
    -int y
    -int length
    +Paddle(int x, int y, int length)
    +void moveLeft()
    +void moveRight()
    +void draw()
    +int getX() const
    +int getY() const
    +int getLength() const
}

class Brick {
    -int x
    -int y
    -bool active
    +Brick()
    +Brick(int x, int y)
    +void draw()
    +bool isActive() const
    +void deactivate()
    +int getX() const
    +int getY() const
}

class Life {
    -int lives
    +Life()
    +void draw(int lives)
}

class ScreenManager {
    +void clearScreen()
    +void refreshScreen()
}

class Game {
    -int score
    -int lives
    -Ball ball
    -Paddle paddle
    -Brick bricks[10][5]
    -Life life
    -ScreenManager screenManager
    +Game()
    +void run()
    +void drawGame()
    +void updateGame()
    +void processInput()
    +void initGame()
    +void showMenu()
}

Ball -> Game
Paddle -> Game
Brick -> Game
Life -> Game
ScreenManager -> Game

@enduml
